name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      # Build Docker image in GitHub Actions
      - name: Build Docker Image
        run: |
          docker build -t frontend-image:latest  -f ./DockerFile .

      # Save the Docker image as a tar file
      - name: Save Docker Image as Tar File
        run: |
          docker save frontend-image:latest -o frontend-image.tar

      # Upload the Docker tar file as an artifact (optional if needed)
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: frontend-image.tar

      # Create EC2 private key file
      - name: Create EC2 private key file
        shell: bash
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          echo "$EC2_PRIVATE_KEY" > ec2_private_key.pem
          chmod 400 "ec2_private_key.pem"

      # Transfer Docker image tar file to EC2
      - name: Copy Docker Image to EC2
        shell: bash
        env:
          REPO_NAME: ${{github.event.repository.name}}
        run: |
          scp -i ec2_private_key.pem -o StrictHostKeyChecking=no frontend-image.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/$REPO_NAME/frontend-image.tar

      # Deploy on EC2
      - name: Deploy to EC2
        env:
          REPO_NAME: ${{github.event.repository.name}}
        run: |
          ssh -i ec2_private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
          cd $REPO_NAME &&
          docker load -i ~/frontend-image.tar &&
          docker compose -f ./docker-compose.yml down &&
          docker container prune -f &&  # Optional: Remove all stopped containers
          sudo docker image prune -f && sudo docker builder prune -f
          docker rm -f frontend_container || true &&  # Ensure old container is removed if it exists
          docker run -d --name frontend_container --network scrapper_zameen_backend_backend frontend-image
          "
